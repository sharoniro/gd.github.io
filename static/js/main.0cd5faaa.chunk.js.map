{"version":3,"sources":["logo.svg","지원금.PNG","Canvas.js","UserInput.js","Container.js","App.js","reportWebVitals.js","index.js"],"names":["_","Canvas","props","useState","setIsDraw","console","log","inputs","month","canvas","canvasFont","ctx","ctxFont","image","canvasRef","useRef","canvasRefFont","useEffect","current","getContext","Image","onload","drawImage","src","img","style","position","width","height","id","ref","onClick","clearRect","font","fillText","attendMonth","location","classNum","name","totalDays","attendDays","date","link","document","createElement","downlad","href","toDataURL","body","appendChild","click","removeChild","UserInput","onChange","e","target","value","setInputs","Input","placeholder","defaultValue","Container","today","Date","getMonth","getDate","App","className","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0cd5faaa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/지원금.586ebc74.PNG\";","import React, { useState, useEffect, useRef } from 'react'\r\nimport img from './지원금.PNG'\r\nimport \"./App.css\"\r\nconst Canvas = (props) => {\r\n  const [isDraw, setIsDraw] = useState(false)\r\n  console.log(props.inputs.month)\r\n  const canvasRef = useRef();\r\n  const canvasRefFont = useRef();\r\n  let canvas, canvasFont;\r\n  let ctx, ctxFont;\r\n  let image;\r\n\r\n  function draw() {\r\n    console.log('draw')\r\n    canvasFont = canvasRefFont.current;\r\n    ctxFont = canvasFont.getContext('2d')\r\n    ctxFont.clearRect(0, 0, 1039, 990);\r\n    ctxFont.font = '30px serif';\r\n    ctxFont.font = '50px serif';\r\n    ctxFont.fillText(props.inputs.attendMonth, 560, 40)\r\n    ctxFont.font = '30px serif';\r\n    ctxFont.fillText(props.inputs.location, 230, 183)\r\n    ctxFont.fillText(props.inputs.classNum, 480, 183)\r\n\r\n\r\n    ctxFont.fillText(props.inputs.name, 840, 190)\r\n\r\n    ctxFont.font = 'bold  40px serif';\r\n    ctxFont.fillText(props.inputs.name, 210, 330)\r\n    ctxFont.font = '30px serif';\r\n    ctxFont.fillText(props.inputs.attendMonth, 395, 333)\r\n    ctxFont.font = '27px serif';\r\n    ctxFont.fillText(props.inputs.totalDays, 590, 333)\r\n\r\n    ctxFont.fillText(props.inputs.attendDays, 900, 333)\r\n    ctxFont.fillText(props.inputs.month, 840, 765)\r\n    ctxFont.fillText(props.inputs.date, 920, 765)\r\n    ctxFont.fillText(props.inputs.name, 740, 890)\r\n    ctxFont.font = 'italic 30px serif';\r\n    ctxFont.fillText(props.inputs.name, 900, 890)\r\n    setIsDraw(true)\r\n\r\n  }\r\n\r\n  function clearCanvas() {\r\n    canvas = canvasRef.current;\r\n    ctx = canvas.getContext('2d')\r\n    image = new Image();\r\n    image.onload = () => {\r\n      ctx.drawImage(image, 0, 0)\r\n    }\r\n    image.src = img\r\n\r\n  }\r\n  function downloadCanvas() {\r\n    console.log(canvas)\r\n\r\n    let link = document.createElement('a');\r\n    link.downlad = \"sign.png\";\r\n    link.href = canvas.toDataURL();\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  useEffect(() => {\r\n    clearCanvas()\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: 'relative', width: '1039px', height: '990px' }}>\r\n        <canvas\r\n          id=\"canvasTop\"\r\n          ref={canvasRef}\r\n          width={1039}\r\n          height={990}\r\n        />\r\n        <canvas\r\n          id=\"canvasBottom\"\r\n          ref={canvasRefFont}\r\n          width={1039}\r\n          height={990}\r\n        />\r\n      </div>\r\n\r\n      <button onClick={draw}>draw</button>\r\n      <button onClick={downloadCanvas}>download</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Canvas\r\n","import React, { useState } from 'react'\r\nimport { Input } from 'semantic-ui-react'\r\nimport \"./App.css\"\r\nconst UserInput = (props) => {\r\n\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target\r\n    props.setInputs({\r\n      ...props.inputs,\r\n      [name]: value\r\n    })\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      이름 : <Input name=\"name\" onChange={onChange} placeholder=\"이름\" /> <br />\r\n      총 수업일 : <Input name=\"totalDays\" onChange={onChange} placeholder=\"총 수업일\" /> <br />\r\n      총 출석일 : <Input name=\"attendDays\" onChange={onChange} placeholder=\"출석일\" /> <br />\r\n      몇월 교육 지원금? <Input name=\"attendMonth\" onChange={onChange} placeholder=\"달\" defaultValue={props.inputs.attendMonth} /> <br />\r\n      지역 : <Input name=\"location\" onChange={onChange} placeholder=\"지역\" /> <br />\r\n      반 : <Input name=\"classNum\" onChange={onChange} placeholder=\"반\" /> <br />\r\n      몇월 : <Input name=\"month\" onChange={onChange} placeholder=\"몇월\" defaultValue={props.inputs.month} /> <br />\r\n      몇일 : <Input name=\"date\" onChange={onChange} placeholder=\"몇일\" defaultValue={props.inputs.date} /> <br />\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserInput\r\n","import React, { useState } from 'react'\r\nimport Canvas from './Canvas'\r\nimport UserInput from './UserInput'\r\n\r\nconst Container = () => {\r\n  const today = new Date();\r\n  const [inputs, setInputs] = useState({\r\n    name: '',\r\n    month: today.getMonth() + 1,\r\n    date: today.getDate(),\r\n    attendMonth: today.getMonth(),\r\n    totalDays: 0,\r\n    attendDays: 0,\r\n    location: '',\r\n    classNum: 0,\r\n  })\r\n  console.log(inputs)\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Canvas inputs={inputs} />\r\n      </div>\r\n      <UserInput inputs={inputs} setInputs={setInputs} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Canvas from './Canvas';\nimport UserInput from './UserInput';\nimport Container from './Container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"100px\" width=\"100px\" />\n        <Container />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}