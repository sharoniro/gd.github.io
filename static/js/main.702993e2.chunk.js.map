{"version":3,"sources":["logo.svg","지원금3.png","Canvas.js","사인칸.PNG","UserInput.js","Container.js","App.js","index.js"],"names":["Canvas","props","canvas","canvasFont","canvasSubmit","ctx","ctxFont","ctxSubmit","image","useState","testSrc","setTestSrc","React","open","setOpen","canvasRef","useRef","canvasRefFont","canvasRefSubmit","signRef","useEffect","current","getContext","Image","onload","drawImage","src","img","style","display","id","ref","width","height","Modal","onClose","onOpen","trigger","Button","primary","onClick","clearRect","font","inputs","attendMonth","fillText","location","length","classNum","name","totalDays","attendDays","year","month","date","toDataURL","className","Header","backgroundColor","Content","scrolling","Description","alt","Actions","link","document","createElement","fileName","download","href","body","appendChild","click","removeChild","sign","_","UserInput","setCtx","isDrawing","setIsDrawing","setImage","context","lineWidth","strokeStyle","fillStyle","fillRect","i","onChange","e","target","value","setInputs","stopDraw","color","Input","size","placeholder","defaultValue","border","onMouseDown","event","persist","onMouseUp","onMouseMove","nativeEvent","offsetX","offsetY","lineTo","stroke","beginPath","moveTo","onMouseLeave","c","Container","today","Date","getFullYear","getMonth","getDate","App","logo","ReactDOM","render","getElementById"],"mappings":"0KAAe,G,OAAA,IAA0B,kC,gBCA1B,MAA0B,gD,yBC4N1BA,EAvNA,SAACC,GACd,IAOIC,EAAQC,EAAYC,EACpBC,EAAKC,EAASC,EACdC,EATJ,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBC,IAAMH,UAAS,GAAvC,mBAAOI,EAAP,KAAaC,EAAb,KAEMC,EAAYC,mBACZC,EAAgBD,mBAChBE,EAAkBF,mBAClBG,EAAUH,mBAuJhB,OATAI,qBAAU,WA9CRlB,EAASa,EAAUM,QACnBlB,EAAac,EAAcI,QAC3BhB,EAAMH,EAAOoB,WAAW,MACxBhB,EAAUH,EAAWmB,WAAW,OAChCd,EAAQ,IAAIe,OACNC,OAAS,WACbnB,EAAIoB,UAAUjB,EAAO,EAAG,IAE1BA,EAAMkB,IAAMC,KAgDZ,qCACE,gCACE,wBACEC,MAAO,CAAEC,QAAS,QAClBC,GAAG,YACHC,IAAKhB,EACLiB,MAAO,KACPC,OAAQ,MAEV,wBACEL,MAAO,CAAEC,QAAS,QAClBC,GAAG,eACHC,IAAKd,EACLe,MAAO,KACPC,OAAQ,MAEV,wBACEL,MAAO,CAAEC,QAAS,QAClBC,GAAG,eACHC,IAAKb,EACLc,MAAO,KACPC,OAAQ,SAKZ,eAACC,EAAA,EAAD,CACErB,KAAMA,EACNsB,QAAS,kBAAMrB,GAAQ,IACvBsB,OAAQ,kBAAMtB,GAAQ,IACtBuB,QAAS,cAACC,EAAA,EAAD,CAAQC,SAAO,EACtBC,QAtDR,WA1HErC,EAAac,EAAcI,SAC3Bf,EAAUH,EAAWmB,WAAW,OACxBmB,UAAU,EAAG,EAAG,KAAM,KAC9BnC,EAAQoC,KAAO,aAGXzC,EAAM0C,OAAOC,aAAe,IAC9BtC,EAAQoC,KAAO,kBACfpC,EAAQuC,SAAS5C,EAAM0C,OAAOC,YAAa,IAAK,IAChDtC,EAAQoC,KAAO,kBACfpC,EAAQuC,SAAS5C,EAAM0C,OAAOC,YAAa,IAAK,KAChDtC,EAAQoC,KAAO,eAIfpC,EAAQoC,KAAO,kBACfpC,EAAQuC,SAAS5C,EAAM0C,OAAOC,YAAa,IAAK,IAChDtC,EAAQoC,KAAO,aACfpC,EAAQuC,SAAS5C,EAAM0C,OAAOC,YAAa,IAAK,MAKlDtC,EAAQoC,KAAO,aAEsB,IAAjCzC,EAAM0C,OAAOG,SAASC,OACxBzC,EAAQuC,SAAS5C,EAAM0C,OAAOG,SAAU,IAAK,KAE7CxC,EAAQuC,SAAS5C,EAAM0C,OAAOG,SAAU,IAAK,KAKH,KAAvC7C,EAAM0C,OAAOK,SAAW,IAAID,OAC/BzC,EAAQuC,SAAS5C,EAAM0C,OAAOK,SAAU,IAAK,KACI,KAAvC/C,EAAM0C,OAAOK,SAAW,IAAID,OACtCzC,EAAQuC,SAAS5C,EAAM0C,OAAOK,SAAU,IAAK,KACI,KAAvC/C,EAAM0C,OAAOK,SAAW,IAAID,OACtCzC,EAAQuC,SAAS5C,EAAM0C,OAAOK,SAAU,IAAK,MAE7C1C,EAAQoC,KAAO,aACfpC,EAAQuC,SAAS5C,EAAM0C,OAAOK,SAAU,IAAK,KAC7C1C,EAAQoC,KAAO,cAIjBpC,EAAQuC,SAAS5C,EAAM0C,OAAOM,KAAM,IAAK,KACzC3C,EAAQoC,KAAO,mBACfpC,EAAQuC,SAAS5C,EAAM0C,OAAOM,KAAM,IAAK,KACzC3C,EAAQoC,KAAO,aAEXzC,EAAM0C,OAAOO,UAAY,GAC3B5C,EAAQuC,SAAS5C,EAAM0C,OAAOO,UAAW,IAAK,KAE9C5C,EAAQuC,SAAS5C,EAAM0C,OAAOO,UAAW,IAAK,KAEhD5C,EAAQuC,SAAS5C,EAAM0C,OAAOQ,WAAY,IAAK,KAI/C7C,EAAQoC,KAAO,aACfpC,EAAQuC,UAAU5C,EAAM0C,OAAOS,KAAO,IAAI,GAAI,IAAK,KACnD9C,EAAQoC,KAAO,aAEXzC,EAAM0C,OAAOU,MAAQ,IACvB/C,EAAQuC,SAAS5C,EAAM0C,OAAOU,MAAO,IAAK,KAC1C/C,EAAQuC,SAAS5C,EAAM0C,OAAOC,YAAa,IAAK,OAEhDtC,EAAQuC,SAAS5C,EAAM0C,OAAOU,MAAO,IAAK,KAC1C/C,EAAQuC,SAAS5C,EAAM0C,OAAOC,YAAa,IAAK,MAOV,KAAnC3C,EAAM0C,OAAOW,KAAO,IAAIP,OAC3BzC,EAAQuC,SAAS5C,EAAM0C,OAAOW,KAAM,IAAK,KAEzChD,EAAQuC,SAAS5C,EAAM0C,OAAOW,KAAM,IAAK,KAI3ChD,EAAQuC,SAAS5C,EAAM0C,OAAOM,KAAM,IAAK,KACzC3C,EAAQoC,KAAO,oBACfpC,EAAQmB,UAAUN,EAAQE,QAAS,IAAK,QAuCxCnB,EAASa,EAAUM,QACnBlB,EAAac,EAAcI,QAC3BjB,EAAec,EAAgBG,QAC/BhB,EAAMH,EAAOoB,WAAW,MACxBhB,EAAUH,EAAWmB,WAAW,OAChCf,EAAYH,EAAakB,WAAW,OAC1BG,UAAUvB,EAAQ,EAAG,GAC/BK,EAAUkB,UAAUtB,EAAY,EAAG,GACnCQ,EAAWP,EAAamD,cA6ClBC,UAAU,kBAFH,sCAIT5B,MAAO,CAAEI,MAAO,UARlB,UAUE,cAACE,EAAA,EAAMuB,OAAP,CAAc7B,MAAO,CAAE8B,gBAAiB,WAAxC,wCACA,cAACxB,EAAA,EAAMyB,QAAP,CAAenD,OAAK,EAACoD,WAAS,EAA9B,SAGE,cAAC1B,EAAA,EAAM2B,YAAP,UACE,qBAAKnC,IAAKhB,EAASoD,IAAI,oDAI3B,cAAC5B,EAAA,EAAM6B,QAAP,UACE,cAACzB,EAAA,EAAD,CAAQE,QAzFhB,WAEEtC,EAASa,EAAUM,QACnBlB,EAAac,EAAcI,QAC3BjB,EAAec,EAAgBG,QAC/BhB,EAAMH,EAAOoB,WAAW,MACxBhB,EAAUH,EAAWmB,WAAW,OAChCf,EAAYH,EAAakB,WAAW,OAC1BG,UAAUvB,EAAQ,EAAG,GAC/BK,EAAUkB,UAAUtB,EAAY,EAAG,GAEnC,IAAI6D,EAAOC,SAASC,cAAc,KAC5BC,EAAgBlE,EAAM0C,OAAOG,SAAW,IAAM7C,EAAM0C,OAAOK,SAAW,UAAO/C,EAAM0C,OAAOM,KAChGe,EAAKI,SAAWD,EAAW,OAC3BH,EAAKK,KAAOjE,EAAamD,YACzBU,SAASK,KAAKC,YAAYP,GAC1BA,EAAKQ,QACLP,SAASK,KAAKG,YAAYT,IAwEazB,SAAO,EAAxC,SACG,qCAIP,qBAAKb,IAAKzB,EAAM0C,OAAO+B,KAAM3C,IAAKZ,EAASa,MAAM,OAAOJ,MAAO,CAAEC,QAAS,QAAUiC,IAAI,a,yBCvN/Ea,EAAA,IAA0B,+CC8I1BC,EA1IG,SAAC3E,GACjB,MAAsBQ,mBAAS,MAA/B,mBAAOJ,EAAP,KAAYwE,EAAZ,KACA,EAAkCpE,oBAAS,GAA3C,mBAAOqE,EAAP,KAAkBC,EAAlB,KACA,EAA0BtE,qBAA1B,mBAAOD,EAAP,KAAcwE,EAAd,KACMjE,EAAYC,mBAElBI,qBAAU,WACR,IACM6D,EADSlE,EAAUM,QACFC,WAAW,MAClC2D,EAAQC,UAAY,EACpBD,EAAQE,YAAc,QACtBF,EAAQG,UAAY,yBACpBH,EAAQI,SAAS,EAAG,EAAG,IAAK,KAE5B,IAAMC,EAAI,IAAI/D,MACd+D,EAAE9D,OAAS,WACTyD,EAAQxD,UAAU6D,EAAG,EAAG,IAE1BA,EAAE5D,IAAMC,EAERkD,EAAOI,KACN,IAEH,IAAMM,EAAW,SAACC,GAChB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,MAAOzC,EAAf,EAAeA,KACfhD,EAAM0F,UAAN,2BACK1F,EAAM0C,QADX,kBAEGM,EAAOyC,MAuCNE,EAAW,WACfb,GAAa,GACbC,EAASjE,EAAUM,QAAQkC,aAC3BtD,EAAM0F,UAAN,2BACK1F,EAAM0C,QADX,IAEE+B,KAAMlE,MAGV,OACE,sBAAKgD,UAAU,YAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,iGACA,mBAAG5B,MAAO,CAAEiE,MAAO,QAAnB,mJACA,cAACC,EAAA,EAAD,CAAOC,KAAK,OAAO9C,KAAK,cAAcsC,SAAUA,EAAUS,YAAY,SAAIC,aAAchG,EAAM0C,OAAOC,cAHvG,IAGuH,0BAEvH,sBAAKY,UAAU,wBAAf,UACE,6CACA,cAACsC,EAAA,EAAD,CAAOC,KAAK,OAAO9C,KAAK,OAAOsC,SAAUA,EAAUS,YAAY,iBAFjE,IAEyE,0BAEzE,sBAAKxC,UAAU,YAAf,UACE,0EACA,sBAAKA,UAAU,aAAf,UACE,cAACsC,EAAA,EAAD,CAAOC,KAAK,OAAO9C,KAAK,WAAWsC,SAAUA,EAAUS,YAAY,iBAGnE,qCAEA,cAACF,EAAA,EAAD,CAAOC,KAAK,OAAO9C,KAAK,WAAWsC,SAAUA,EAAUS,YAAY,SAAIxC,UAAU,uBAGrF,sBAAKA,UAAU,YAAf,UACE,sFACA,sBAAKA,UAAU,aAAf,UACE,cAACsC,EAAA,EAAD,CAAOC,KAAK,OAAO9C,KAAK,aAAasC,SAAUA,EAAUS,YAAY,8BACrE,qCACA,cAACF,EAAA,EAAD,CAAOC,KAAK,OAAO9C,KAAK,YAAYsC,SAAUA,EAAUS,YAAY,4BAAQxC,UAAU,eAAeyC,aAAchG,EAAM0C,OAAOO,kBAKpI,sBAAKM,UAAU,YAAf,UACE,qEACA,mBAAG5B,MAAO,CAAEiE,MAAO,QAAnB,6GACA,sBAAKrC,UAAU,aAAf,UACE,cAACsC,EAAA,EAAD,CAAOC,KAAK,OAAO9C,KAAK,QAAQsC,SAAUA,EAAUS,YAAY,eAAKC,aAAchG,EAAM0C,OAAOU,QAChG,qCACA,cAACyC,EAAA,EAAD,CAAOC,KAAK,OAAO9C,KAAK,OAAOsC,SAAUA,EAAUS,YAAY,eAAKC,aAAchG,EAAM0C,OAAOW,KAAME,UAAU,uBAGnH,sBAAKA,UAAU,YAAf,UACE,6CACA,sBAAKA,UAAU,WAAf,UACE,wBACE1B,GAAG,aACHC,IAAKhB,EACLa,MAAO,CAAEsE,OAAQ,mBACjBlE,MAAO,IACPC,OAAQ,GACRkE,YA9EQ,SAACC,GACjBA,EAAMC,UACNtB,GAAa,IA6ELuB,UAAWV,EACXW,YA3EM,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACTC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACbrG,IACGyE,GAIHzE,EAAIsG,OAAOF,EAASC,GACpBrG,EAAIuG,WAJJvG,EAAIwG,YACJxG,EAAIyG,OAAOL,EAASC,MAuEhBK,aAAcnB,IAEhB,cAACtD,EAAA,EAAD,CAAQE,QAjGI,WAClB,IAAMwE,EAAIjG,EAAUM,QAAQC,WAAW,MACvC0F,EAAE3B,SAAS,EAAG,EAAG,IAAK,KACtB2B,EAAE9B,UAAY,EACd8B,EAAE7B,YAAc,QAChB6B,EAAE5B,UAAY,yBACd,IAAME,EAAI,IAAI/D,MACd+D,EAAE9D,OAAS,WACTwF,EAAEvF,UAAU6D,EAAG,EAAG,IAEpBA,EAAE5D,IAAMC,EACRkD,EAAOmC,IAsFD,uDCtGKC,EA3BG,WAChB,IAAMC,EAAQ,IAAIC,KAClB,EAA4B1G,mBAAS,CACnCwC,KAAM,qBACNG,KAAM8D,EAAME,cACZ/D,MAAO6D,EAAMG,WAAa,EAC1B/D,KAAM4D,EAAMI,UACZ1E,YAAasE,EAAMG,WACnBnE,UAAW,GACXC,WAAY,GACZL,SAAU,eACVE,SAAU,EACV0B,KAAM,KAVR,mBAAO/B,EAAP,KAAegD,EAAf,KAaA,OACE,gCAIE,cAAC,EAAD,CAAWhD,OAAQA,EAAQgD,UAAWA,IACtC,cAAC,EAAD,CAAQhD,OAAQA,QCKP4E,MAzBf,WAIE,OAEE,sBAAK/D,UAAU,aAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAK9B,IAAK8F,EAAMhE,UAAU,WAAWM,IAAI,OAAO7B,OAAO,QAAQD,MAAM,UACrE,yGAGF,cAAC,EAAD,IAEA,sBAAKwB,UAAU,SAAf,UACE,sGACA,kG,OCfRiE,IAASC,OAEP,cAAC,EAAD,IAEAzD,SAAS0D,eAAe,U","file":"static/js/main.702993e2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/지원금3.ba1ca0eb.png\";","import React, { useState, useEffect, useRef } from 'react'\n// import img from './지원금.PNG'\nimport img from './지원금3.png'\nimport \"./App.css\"\nimport { Button, Modal } from 'semantic-ui-react'\nconst Canvas = (props) => {\n  const [testSrc, setTestSrc] = useState('')\n  const [open, setOpen] = React.useState(false)\n\n  const canvasRef = useRef();\n  const canvasRefFont = useRef();\n  const canvasRefSubmit = useRef();\n  const signRef = useRef();\n  let canvas, canvasFont, canvasSubmit;\n  let ctx, ctxFont, ctxSubmit;\n  let image;\n\n  function draw() {\n\n    canvasFont = canvasRefFont.current;\n    ctxFont = canvasFont.getContext('2d')\n    ctxFont.clearRect(0, 0, 1039, 990);\n    ctxFont.font = '30px serif';\n\n\n    if (props.inputs.attendMonth >= 10) {  //교육지원금 달 수\n      ctxFont.font = 'bold 38px serif';\n      ctxFont.fillText(props.inputs.attendMonth, 543, 40) //맨위 젤큰놈\n      ctxFont.font = 'bold 27px serif';\n      ctxFont.fillText(props.inputs.attendMonth, 384, 330) //월 교육일수\n      ctxFont.font = '28px serif';\n      // ctxFont.fillText(props.inputs.attendMonth, 212, 642) // 월 출석일수\n      // ctxFont.fillText(props.inputs.attendMonth, 512, 642) // 월 출석일수\n    } else {\n      ctxFont.font = 'bold 50px serif';\n      ctxFont.fillText(props.inputs.attendMonth, 555, 42) // ~월 교육 지원금 서명 (맨위)\n      ctxFont.font = '30px serif';\n      ctxFont.fillText(props.inputs.attendMonth, 395, 333) //x 월 교육일수  \n      // ctxFont.fillText(props.inputs.attendMonth, 225, 643)// 월 출석일수\n      // ctxFont.fillText(props.inputs.attendMonth, 520, 643)// 월 출석일수\n    }\n\n    ctxFont.font = '30px serif';\n\n    if (props.inputs.location.length === 2) { // 지역 (서울 , 대전 , 광주 , 부울경 등)\n      ctxFont.fillText(props.inputs.location, 230, 183) // 지역(가운데 정렬)\n    } else {\n      ctxFont.fillText(props.inputs.location, 215, 183) //부울경 (살짝 왼쪽으로 치우치게)\n    }\n\n\n\n    if ((props.inputs.classNum + '').length === 1) { // 반  (1자리)\n      ctxFont.fillText(props.inputs.classNum, 480, 183)\n    } else if ((props.inputs.classNum + '').length === 2) {  // 반 (2자리)\n      ctxFont.fillText(props.inputs.classNum, 470, 183)\n    } else if ((props.inputs.classNum + '').length === 3) { // 반 (3자리)\n      ctxFont.fillText(props.inputs.classNum, 440, 183)\n    } else { // 반 (4자리)\n      ctxFont.font = '26px serif';\n      ctxFont.fillText(props.inputs.classNum, 430, 183)\n      ctxFont.font = '30px serif';\n    }\n\n    //이름\n    ctxFont.fillText(props.inputs.name, 840, 190)// 오른쪽 맨위 성명칸\n    ctxFont.font = 'bold  40px serif';\n    ctxFont.fillText(props.inputs.name, 205, 330) //교육지원금 칸에있는 이름\n    ctxFont.font = '27px serif';\n\n    if (props.inputs.totalDays < 10) {  //교육일수 xx일 볼드 된 곳\n      ctxFont.fillText(props.inputs.totalDays, 600, 332)\n    } else {\n      ctxFont.fillText(props.inputs.totalDays, 590, 332)\n    }\n    ctxFont.fillText(props.inputs.attendDays, 900, 330) // 총 출석일\n\n\n\n    ctxFont.font = '28px serif';\n    ctxFont.fillText((props.inputs.year + '')[3], 680, 764) // 맨아래 날짜 연도\n    ctxFont.font = '27px serif';\n    //아래쪽 달수 2자리인지 검사\n    if (props.inputs.month < 10) {\n      ctxFont.fillText(props.inputs.month, 840, 764)\n      ctxFont.fillText(props.inputs.attendMonth, 282, 640)\n    } else {\n      ctxFont.fillText(props.inputs.month, 825, 764)\n      ctxFont.fillText(props.inputs.attendMonth, 270, 640)\n    }\n\n\n\n\n\n    if ((props.inputs.date + '').length === 1) { // 맨 아래 일\n      ctxFont.fillText(props.inputs.date, 945, 764)\n    } else {\n      ctxFont.fillText(props.inputs.date, 935, 764)\n    }\n\n    //맨아래 인적사항\n    ctxFont.fillText(props.inputs.name, 740, 890)\n    ctxFont.font = 'italic 30px serif';\n    ctxFont.drawImage(signRef.current, 848, 832.35)\n  }\n\n  function clearCanvas() {\n    canvas = canvasRef.current;\n    canvasFont = canvasRefFont.current;\n    ctx = canvas.getContext('2d')\n    ctxFont = canvasFont.getContext('2d')\n    image = new Image();\n    image.onload = () => {\n      ctx.drawImage(image, 0, 0)\n    }\n    image.src = img\n\n  }\n\n\n  function downloadCanvas() {\n\n    canvas = canvasRef.current;\n    canvasFont = canvasRefFont.current;\n    canvasSubmit = canvasRefSubmit.current;\n    ctx = canvas.getContext('2d')\n    ctxFont = canvasFont.getContext('2d')\n    ctxSubmit = canvasSubmit.getContext('2d')\n    ctxSubmit.drawImage(canvas, 0, 0);\n    ctxSubmit.drawImage(canvasFont, 0, 0);\n\n    let link = document.createElement('a');\n    const fileName = '' + props.inputs.location + '_' + props.inputs.classNum + '반_' + props.inputs.name\n    link.download = fileName + \".JPG\";\n    link.href = canvasSubmit.toDataURL();\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  function toImage() {\n    draw()\n    canvas = canvasRef.current;\n    canvasFont = canvasRefFont.current;\n    canvasSubmit = canvasRefSubmit.current;\n    ctx = canvas.getContext('2d')\n    ctxFont = canvasFont.getContext('2d')\n    ctxSubmit = canvasSubmit.getContext('2d')\n    ctxSubmit.drawImage(canvas, 0, 0);\n    ctxSubmit.drawImage(canvasFont, 0, 0);\n    setTestSrc(canvasSubmit.toDataURL());\n  }\n\n  useEffect(() => {\n    clearCanvas()\n  })\n\n\n\n\n\n\n  return (\n    <>\n      <div >\n        <canvas\n          style={{ display: 'none' }}\n          id=\"canvasTop\"\n          ref={canvasRef}\n          width={1039}\n          height={990}\n        />\n        <canvas\n          style={{ display: 'none' }}\n          id=\"canvasBottom\"\n          ref={canvasRefFont}\n          width={1039}\n          height={990}\n        />\n        <canvas\n          style={{ display: 'none' }}\n          id=\"canvasSubmit\"\n          ref={canvasRefSubmit}\n          width={1039}\n          height={990}\n        />\n      </div>\n\n\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        trigger={<Button primary\n          onClick={toImage}\n          className=\"generate-button\"\n        >생성하기</Button>}\n        style={{ width: '1070px' }}\n      >\n        <Modal.Header style={{ backgroundColor: '#f9fafb' }}> 미리 보기</Modal.Header>\n        <Modal.Content image scrolling>\n\n\n          <Modal.Description>\n            <img src={testSrc} alt=\"이미지 미리보기\" />\n\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={downloadCanvas} primary>\n            {'다운로드  >'}\n          </Button>\n        </Modal.Actions>\n      </Modal>\n      <img src={props.inputs.sign} ref={signRef} width='10px' style={{ display: 'none' }} alt=\"sign\" />\n    </>\n  )\n}\n\nexport default Canvas","export default __webpack_public_path__ + \"static/media/사인칸.5e90d7a2.PNG\";","import React, { useState, useEffect, useRef } from 'react'\nimport { Button, Input } from 'semantic-ui-react'\nimport img from './사인칸.PNG'\nimport \"./App.css\"\nconst UserInput = (props) => {\n  const [ctx, setCtx] = useState(null)\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [image, setImage] = useState();\n  const canvasRef = useRef();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.lineWidth = 1;\n    context.strokeStyle = \"black\";\n    context.fillStyle = \"rgba(255, 255, 255, 1)\";\n    context.fillRect(0, 0, 300, 150);\n\n    const i = new Image();\n    i.onload = () => {\n      context.drawImage(i, 0, 0)\n    }\n    i.src = img\n\n    setCtx(context)\n  }, [])\n\n  const onChange = (e) => {\n    const { value, name } = e.target\n    props.setInputs({\n      ...props.inputs,\n      [name]: value\n    })\n\n  }\n\n  const clearCanvas = () => {\n    const c = canvasRef.current.getContext(\"2d\");\n    c.fillRect(0, 0, 300, 150);\n    c.lineWidth = 2;\n    c.strokeStyle = \"black\";\n    c.fillStyle = \"rgba(255, 255, 255, 1)\";\n    const i = new Image();\n    i.onload = () => {\n      c.drawImage(i, 0, 0)\n    }\n    i.src = img\n    setCtx(c)\n  }\n\n  const startDraw = (event) => {\n    event.persist();\n    setIsDrawing(true);\n  }\n\n  const drawing = ({ nativeEvent }) => {\n    const { offsetX, offsetY } = nativeEvent;\n    if (ctx) {\n      if (!isDrawing) {\n        ctx.beginPath();\n        ctx.moveTo(offsetX, offsetY);\n      } else {\n        ctx.lineTo(offsetX, offsetY);\n        ctx.stroke();\n\n      }\n    }\n\n  }\n\n  const stopDraw = () => {\n    setIsDrawing(false);\n    setImage(canvasRef.current.toDataURL())\n    props.setInputs({\n      ...props.inputs,\n      sign: image\n    })\n  }\n  return (\n    <div className=\"userInput\">\n      <div className=\"input-box input-once\">\n        <p>몇월 교육 지원금 인가요?</p>\n        <p style={{ color: 'grey' }}>*틀리는 분이 많습니다 ex) 10월 1일 서명 => 9월이 맞습니다</p>\n        <Input size='mini' name=\"attendMonth\" onChange={onChange} placeholder=\"달\" defaultValue={props.inputs.attendMonth} /> <br />\n      </div>\n      <div className=\"input-box  input-once\">\n        <p>이름</p>\n        <Input size='mini' name=\"name\" onChange={onChange} placeholder=\"이름\" /> <br />\n      </div>\n      <div className=\"input-box\">\n        <p>지역 / 반(숫자만)</p>\n        <div className=\"input-flex\">\n          <Input size='mini' name=\"location\" onChange={onChange} placeholder=\"지역\" />\n\n\n          <span>/</span>\n\n          <Input size='mini' name=\"classNum\" onChange={onChange} placeholder=\"반\" className=\"second-input\" />\n        </div>\n      </div>\n      <div className=\"input-box\">\n        <p>총 출석일 / 총 수업일</p>\n        <div className=\"input-flex\">\n          <Input size='mini' name=\"attendDays\" onChange={onChange} placeholder=\"총 출석일\" />\n          <span>/</span>\n          <Input size='mini' name=\"totalDays\" onChange={onChange} placeholder=\"총 수업일\" className=\"second-input\" defaultValue={props.inputs.totalDays} />\n        </div>\n      </div>\n\n\n      <div className=\"input-box\">\n        <p>제출일 (월 / 일)</p>\n        <p style={{ color: 'grey' }}>*보통 제출 마감일 적어주시면 됩니다</p>\n        <div className=\"input-flex\">\n          <Input size='mini' name=\"month\" onChange={onChange} placeholder=\"몇월\" defaultValue={props.inputs.month} />\n          <span>/</span>\n          <Input size='mini' name=\"date\" onChange={onChange} placeholder=\"몇일\" defaultValue={props.inputs.date} className=\"second-input\" />\n        </div>\n      </div>\n      <div className=\"input-box\">\n        <p>서명</p>\n        <div className=\"sign-div\">\n          <canvas\n            id=\"signCanvas\"\n            ref={canvasRef}\n            style={{ border: '3px solid black' }}\n            width={166}\n            height={90}\n            onMouseDown={startDraw}\n            onMouseUp={stopDraw}\n            onMouseMove={drawing}\n            onMouseLeave={stopDraw}\n          ></canvas>\n          <Button onClick={clearCanvas}>다시 그리기</Button>\n        </div>\n      </div>\n\n\n    </div>\n  )\n}\n\nexport default UserInput\n","import React, { useState } from 'react'\nimport Canvas from './Canvas'\nimport UserInput from './UserInput'\n\nconst Container = () => {\n  const today = new Date();\n  const [inputs, setInputs] = useState({\n    name: '김싸피',\n    year: today.getFullYear(),\n    month: today.getMonth() + 1,\n    date: today.getDate(),\n    attendMonth: today.getMonth(),\n    totalDays: 19,\n    attendDays: 19,\n    location: '서울',\n    classNum: 1,\n    sign: '',\n  })\n\n  return (\n    <div>\n\n\n\n      <UserInput inputs={inputs} setInputs={setInputs} />\n      <Canvas inputs={inputs} />\n\n    </div>\n  )\n}\n\nexport default Container\n","import logo from './logo.svg';\nimport './App.css';\n\nimport Container from './Container';\n\nfunction App() {\n\n\n\n  return (\n\n    <div className=\"App-header\">\n      <div className=\"header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"100px\" width=\"100px\" />\n        <h1>SSAFY 교육지원금 서명 생성기</h1>\n      </div>\n\n      <Container />\n\n      <div className=\"footer\">\n        <p>&copy;  SSAFY 5기 서울캠퍼스 최동욱</p>\n        <p>문의사항 / 버그 : cheal3@naver.com</p>\n      </div>\n\n\n    </div >\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'semantic-ui-css/semantic.min.css'\nReactDOM.render(\n\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}