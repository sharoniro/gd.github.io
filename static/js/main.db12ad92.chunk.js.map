{"version":3,"sources":["logo.svg","지원금.PNG","Canvas.js","UserInput.js","Container.js","App.js","reportWebVitals.js","index.js"],"names":["_","Canvas","props","console","log","inputs","month","canvas","canvasFont","canvasSubmit","ctx","ctxFont","ctxSubmit","image","canvasRef","useRef","canvasRefFont","canvasRefSubmit","useEffect","current","getContext","Image","onload","drawImage","src","img","style","position","width","height","id","ref","display","Button","primary","onClick","clearRect","font","fillText","attendMonth","location","classNum","name","totalDays","length","attendDays","date","secondary","link","document","createElement","fileName","download","href","toDataURL","body","appendChild","click","removeChild","UserInput","onChange","e","target","value","setInputs","className","Input","size","placeholder","defaultValue","Container","today","Date","useState","getMonth","getDate","App","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oJAAe,G,MAAA,IAA0B,kC,gBCA1BA,EAAA,IAA0B,+C,gBC6H1BC,EAzHA,SAACC,GAEdC,QAAQC,IAAIF,EAAMG,OAAOC,OACzB,IAGIC,EAAQC,EAAYC,EACpBC,EAAKC,EAASC,EACdC,EALEC,EAAYC,mBACZC,EAAgBD,mBAChBE,EAAkBF,mBAqFxB,OATAG,qBAAU,WAnCRX,EAASO,EAAUK,QACnBX,EAAaQ,EAAcG,QAC3BT,EAAMH,EAAOa,WAAW,MACxBT,EAAUH,EAAWY,WAAW,OAChCP,EAAQ,IAAIQ,OACNC,OAAS,WACbZ,EAAIa,UAAUV,EAAO,EAAG,IAE1BA,EAAMW,IAAMC,KAqCZ,qCACE,sBAAKC,MAAO,CAAEC,SAAU,WAAYC,MAAO,SAAUC,OAAQ,SAA7D,UACE,wBACEC,GAAG,YACHC,IAAKjB,EACLc,MAAO,KACPC,OAAQ,MAEV,wBACEC,GAAG,eACHC,IAAKf,EACLY,MAAO,KACPC,OAAQ,MAEV,wBACEH,MAAO,CAAEM,QAAS,QAClBF,GAAG,eACHC,IAAKd,EACLW,MAAO,KACPC,OAAQ,SAIZ,cAACI,EAAA,EAAD,CAAQC,SAAO,EAACC,QAxGpB,WAEE3B,EAAaQ,EAAcG,SAC3BR,EAAUH,EAAWY,WAAW,OACxBgB,UAAU,EAAG,EAAG,KAAM,KAC9BzB,EAAQ0B,KAAO,aACf1B,EAAQ0B,KAAO,aACf1B,EAAQ2B,SAASpC,EAAMG,OAAOkC,YAAa,IAAK,IAChD5B,EAAQ0B,KAAO,aACf1B,EAAQ2B,SAASpC,EAAMG,OAAOmC,SAAU,IAAK,KAC7C7B,EAAQ2B,SAASpC,EAAMG,OAAOoC,SAAU,IAAK,KAC7C9B,EAAQ2B,SAASpC,EAAMG,OAAOqC,KAAM,IAAK,KACzC/B,EAAQ0B,KAAO,mBACf1B,EAAQ2B,SAASpC,EAAMG,OAAOqC,KAAM,IAAK,KACzC/B,EAAQ0B,KAAO,aACf1B,EAAQ2B,SAASpC,EAAMG,OAAOkC,YAAa,IAAK,KAChD5B,EAAQ0B,KAAO,aACflC,QAAQC,KAAKF,EAAMG,OAAOsC,UAAY,IAAIC,QACG,KAAxC1C,EAAMG,OAAOsC,UAAY,IAAIC,OAChCjC,EAAQ2B,SAASpC,EAAMG,OAAOsC,UAAW,IAAK,KAE9ChC,EAAQ2B,SAASpC,EAAMG,OAAOsC,UAAW,IAAK,KAEhDhC,EAAQ2B,SAASpC,EAAMG,OAAOwC,WAAY,IAAK,KAC/ClC,EAAQ2B,SAASpC,EAAMG,OAAOC,MAAO,IAAK,KACF,KAAnCJ,EAAMG,OAAOyC,KAAO,IAAIF,OAC3BjC,EAAQ2B,SAASpC,EAAMG,OAAOyC,KAAM,IAAK,KAEzCnC,EAAQ2B,SAASpC,EAAMG,OAAOyC,KAAM,IAAK,KAE3CnC,EAAQ2B,SAASpC,EAAMG,OAAOqC,KAAM,IAAK,KACzC/B,EAAQ0B,KAAO,oBACf1B,EAAQ2B,SAASpC,EAAMG,OAAOqC,KAAM,IAAK,MAwEvC,oDACA,cAACT,EAAA,EAAD,CAAQc,WAAS,EAACZ,QAzDtB,WAEE5B,EAASO,EAAUK,QACnBX,EAAaQ,EAAcG,QAC3BV,EAAeQ,EAAgBE,QAC/BT,EAAMH,EAAOa,WAAW,MACxBT,EAAUH,EAAWY,WAAW,OAChCR,EAAYH,EAAaW,WAAW,OAE1BG,UAAUhB,EAAQ,EAAG,GAC/BK,EAAUW,UAAUf,EAAY,EAAG,GAEnC,IAAIwC,EAAOC,SAASC,cAAc,KAC5BC,EAAgBjD,EAAMG,OAAOmC,SAAW,IAAMtC,EAAMG,OAAOoC,SAAW,UAAOvC,EAAMG,OAAOqC,KAChGM,EAAKI,SAAWD,EAAW,OAC3BH,EAAKK,KAAO5C,EAAa6C,YACzBL,SAASM,KAAKC,YAAYR,GAC1BA,EAAKS,QACLR,SAASM,KAAKG,YAAYV,IAuCxB,0C,yBC9DSW,EAtDG,SAACzD,GAGjB,IAAM0D,EAAW,SAACC,GAChB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,MAAOrB,EAAf,EAAeA,KACfxC,EAAM8D,UAAN,2BACK9D,EAAMG,QADX,kBAEGqC,EAAOqB,MAIZ,OACE,sBAAKE,UAAU,YAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,8EADF,IACoB,uBAClB,cAACC,EAAA,EAAD,CAAOC,KAAK,OAAOzB,KAAK,cAAckB,SAAUA,EAAUQ,YAAY,SAAIC,aAAcnE,EAAMG,OAAOkC,cAFvG,IAEuH,0BAEvH,sBAAK0B,UAAU,wBAAf,UACE,6CADF,IACY,uBACV,cAACC,EAAA,EAAD,CAAOC,KAAK,OAAOzB,KAAK,OAAOkB,SAAUA,EAAUQ,YAAY,iBAFjE,IAEyE,0BAEzE,sBAAKH,UAAU,YAAf,UACE,sDACA,sBAAKA,UAAU,aAAf,UACE,cAACC,EAAA,EAAD,CAAOC,KAAK,OAAOzB,KAAK,WAAWkB,SAAUA,EAAUQ,YAAY,iBACnE,qCACA,cAACF,EAAA,EAAD,CAAOC,KAAK,OAAOzB,KAAK,WAAWkB,SAAUA,EAAUQ,YAAY,SAAIH,UAAU,uBAGrF,sBAAKA,UAAU,YAAf,UACE,sFACA,sBAAKA,UAAU,aAAf,UACE,cAACC,EAAA,EAAD,CAAOC,KAAK,OAAOzB,KAAK,aAAakB,SAAUA,EAAUQ,YAAY,8BACrE,qCACA,cAACF,EAAA,EAAD,CAAOC,KAAK,OAAOzB,KAAK,YAAYkB,SAAUA,EAAUQ,YAAY,4BAAQH,UAAU,uBAK1F,sBAAKA,UAAU,YAAf,UACE,4DACA,sBAAKA,UAAU,aAAf,UACE,cAACC,EAAA,EAAD,CAAOC,KAAK,OAAOzB,KAAK,QAAQkB,SAAUA,EAAUQ,YAAY,eAAKC,aAAcnE,EAAMG,OAAOC,QAChG,qCACA,cAAC4D,EAAA,EAAD,CAAOC,KAAK,OAAOzB,KAAK,OAAOkB,SAAUA,EAAUQ,YAAY,eAAKC,aAAcnE,EAAMG,OAAOyC,KAAMmB,UAAU,2BCpB1GK,EAvBG,WAChB,IAAMC,EAAQ,IAAIC,KAClB,EAA4BC,mBAAS,CACnC/B,KAAM,qBACNpC,MAAOiE,EAAMG,WAAa,EAC1B5B,KAAMyB,EAAMI,UACZpC,YAAagC,EAAMG,WACnB/B,UAAW,EACXE,WAAY,EACZL,SAAU,eACVC,SAAU,IARZ,mBAAOpC,EAAP,KAAe2D,EAAf,KAWA,OACE,sBAAKC,UAAU,YAAf,UACE,8BACE,cAAC,EAAD,CAAQ5D,OAAQA,MAElB,cAAC,EAAD,CAAWA,OAAQA,EAAQ2D,UAAWA,QCF7BY,MAff,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKzC,IAAKqD,EAAMZ,UAAU,WAAWa,IAAI,OAAOjD,OAAO,QAAQD,MAAM,UACrE,yGAGF,cAAC,EAAD,UCFOmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzC,SAAS0C,eAAe,SAM1BZ,K","file":"static/js/main.db12ad92.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/지원금.586ebc74.PNG\";","import React, { useEffect, useRef } from 'react'\r\nimport img from './지원금.PNG'\r\nimport \"./App.css\"\r\nimport { Button } from 'semantic-ui-react'\r\nconst Canvas = (props) => {\r\n\r\n  console.log(props.inputs.month)\r\n  const canvasRef = useRef();\r\n  const canvasRefFont = useRef();\r\n  const canvasRefSubmit = useRef();\r\n  let canvas, canvasFont, canvasSubmit;\r\n  let ctx, ctxFont, ctxSubmit;\r\n  let image;\r\n\r\n  function draw() {\r\n\r\n    canvasFont = canvasRefFont.current;\r\n    ctxFont = canvasFont.getContext('2d')\r\n    ctxFont.clearRect(0, 0, 1039, 990);\r\n    ctxFont.font = '30px serif';\r\n    ctxFont.font = '50px serif';\r\n    ctxFont.fillText(props.inputs.attendMonth, 560, 40)\r\n    ctxFont.font = '30px serif';\r\n    ctxFont.fillText(props.inputs.location, 230, 183)\r\n    ctxFont.fillText(props.inputs.classNum, 480, 183)\r\n    ctxFont.fillText(props.inputs.name, 840, 190)\r\n    ctxFont.font = 'bold  40px serif';\r\n    ctxFont.fillText(props.inputs.name, 210, 330)\r\n    ctxFont.font = '30px serif';\r\n    ctxFont.fillText(props.inputs.attendMonth, 395, 333)\r\n    ctxFont.font = '27px serif';\r\n    console.log((props.inputs.totalDays + '').length)\r\n    if ((props.inputs.totalDays + '').length === 1) {\r\n      ctxFont.fillText(props.inputs.totalDays, 600, 330)\r\n    } else {\r\n      ctxFont.fillText(props.inputs.totalDays, 590, 330)\r\n    }\r\n    ctxFont.fillText(props.inputs.attendDays, 900, 330)\r\n    ctxFont.fillText(props.inputs.month, 840, 764)\r\n    if ((props.inputs.date + '').length === 1) {\r\n      ctxFont.fillText(props.inputs.date, 945, 764)\r\n    } else {\r\n      ctxFont.fillText(props.inputs.date, 935, 764)\r\n    }\r\n    ctxFont.fillText(props.inputs.name, 740, 890)\r\n    ctxFont.font = 'italic 30px serif';\r\n    ctxFont.fillText(props.inputs.name, 900, 890)\r\n  }\r\n\r\n  function clearCanvas() {\r\n    canvas = canvasRef.current;\r\n    canvasFont = canvasRefFont.current;\r\n    ctx = canvas.getContext('2d')\r\n    ctxFont = canvasFont.getContext('2d')\r\n    image = new Image();\r\n    image.onload = () => {\r\n      ctx.drawImage(image, 0, 0)\r\n    }\r\n    image.src = img\r\n  }\r\n\r\n\r\n  function downloadCanvas() {\r\n\r\n    canvas = canvasRef.current;\r\n    canvasFont = canvasRefFont.current;\r\n    canvasSubmit = canvasRefSubmit.current;\r\n    ctx = canvas.getContext('2d')\r\n    ctxFont = canvasFont.getContext('2d')\r\n    ctxSubmit = canvasSubmit.getContext('2d')\r\n\r\n    ctxSubmit.drawImage(canvas, 0, 0);\r\n    ctxSubmit.drawImage(canvasFont, 0, 0);\r\n\r\n    let link = document.createElement('a');\r\n    const fileName = '' + props.inputs.location + '_' + props.inputs.classNum + '반_' + props.inputs.name\r\n    link.download = fileName + \".JPG\";\r\n    link.href = canvasSubmit.toDataURL();\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    clearCanvas()\r\n  })\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: 'relative', width: '1039px', height: '990px' }}>\r\n        <canvas\r\n          id=\"canvasTop\"\r\n          ref={canvasRef}\r\n          width={1039}\r\n          height={990}\r\n        />\r\n        <canvas\r\n          id=\"canvasBottom\"\r\n          ref={canvasRefFont}\r\n          width={1039}\r\n          height={990}\r\n        />\r\n        <canvas\r\n          style={{ display: 'none' }}\r\n          id=\"canvasSubmit\"\r\n          ref={canvasRefSubmit}\r\n          width={1039}\r\n          height={990}\r\n        />\r\n      </div>\r\n\r\n      <Button primary onClick={draw}>결과 미리 보기</Button>\r\n      <Button secondary onClick={downloadCanvas}>다운로드</Button>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Canvas\r\n","import React from 'react'\r\nimport { Input } from 'semantic-ui-react'\r\nimport \"./App.css\"\r\nconst UserInput = (props) => {\r\n\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target\r\n    props.setInputs({\r\n      ...props.inputs,\r\n      [name]: value\r\n    })\r\n\r\n  }\r\n  return (\r\n    <div className=\"userInput\">\r\n      <div className=\"input-box input-once\">\r\n        <p>몇월 교육 지원금?</p> <br />\r\n        <Input size='mini' name=\"attendMonth\" onChange={onChange} placeholder=\"달\" defaultValue={props.inputs.attendMonth} /> <br />\r\n      </div>\r\n      <div className=\"input-box  input-once\">\r\n        <p>이름</p> <br />\r\n        <Input size='mini' name=\"name\" onChange={onChange} placeholder=\"이름\" /> <br />\r\n      </div>\r\n      <div className=\"input-box\">\r\n        <p>지역 / 반</p>\r\n        <div className=\"input-flex\">\r\n          <Input size='mini' name=\"location\" onChange={onChange} placeholder=\"지역\" />\r\n          <span>/</span>\r\n          <Input size='mini' name=\"classNum\" onChange={onChange} placeholder=\"반\" className=\"second-input\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"input-box\">\r\n        <p>총 출석일 / 총 수업일</p>\r\n        <div className=\"input-flex\">\r\n          <Input size='mini' name=\"attendDays\" onChange={onChange} placeholder=\"총 출석일\" />\r\n          <span>/</span>\r\n          <Input size='mini' name=\"totalDays\" onChange={onChange} placeholder=\"총 수업일\" className=\"second-input\" />\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"input-box\">\r\n        <p>몇월 / 몇일</p>\r\n        <div className=\"input-flex\">\r\n          <Input size='mini' name=\"month\" onChange={onChange} placeholder=\"몇월\" defaultValue={props.inputs.month} />\r\n          <span>/</span>\r\n          <Input size='mini' name=\"date\" onChange={onChange} placeholder=\"몇일\" defaultValue={props.inputs.date} className=\"second-input\" />\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserInput\r\n","import React, { useState } from 'react'\r\nimport Canvas from './Canvas'\r\nimport UserInput from './UserInput'\r\n\r\nconst Container = () => {\r\n  const today = new Date();\r\n  const [inputs, setInputs] = useState({\r\n    name: '김싸피',\r\n    month: today.getMonth() + 1,\r\n    date: today.getDate(),\r\n    attendMonth: today.getMonth(),\r\n    totalDays: 1,\r\n    attendDays: 1,\r\n    location: '서울',\r\n    classNum: 6,\r\n  })\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div>\r\n        <Canvas inputs={inputs} />\r\n      </div>\r\n      <UserInput inputs={inputs} setInputs={setInputs} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container\r\n","import logo from './logo.svg';\nimport './App.css';\n\nimport Container from './Container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"100px\" width=\"100px\" />\n          <h1>SSAFY 교육지원금 서명 생성기</h1>\n        </div>\n\n        <Container />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}